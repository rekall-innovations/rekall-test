DEFAULT:
  --cache_dir: '%(testdir)s/../profile_cache/'
  --filename:  '%(testdir)s/win7.elf.E01'
  --name_resolution_strategies:
     - Module
     - Symbol
  pids: 1724
  --cache: memory

  # Only run these tests. This turns off automatic test discovery.
  enabled:
    - TestWinPsList
    - TestCmdScan
    - TestCommandScan
    - TestConsoleScan
    - TestConsoles
    - TestMftDump
    - TestMimikatz
    - TestPoolTracker
    - TestWinDNSCache
    - TestWinEventHooks
    - TestWinSSDT
    - TestPSScan
    - TestMimikatz
    - TestPrivileges
    - TestYara
    - TestSearchPlugin
    - TestWinPhysicalYaraScanner
    - TestWinYaraScan

InlineTests:
  # Test the search plugin.
  TestSearchPlugin: |
    print "Describe pslist()"
    describe(pslist)
    print "All Wow64 processes:"
    query = "select _EPROCESS, session_id, wow64 from pslist() where wow64"
    print query
    search(query)

    print "struct introspection and sorting."
    query = """
      select _EPROCESS.name, _EPROCESS.pid, wow64 from pslist() where
        _EPROCESS.name =~ 'svchost' order by _EPROCESS.pid desc
    """
    print query
    search(query)

    query = """
      select _EPROCESS.name, _EPROCESS.pid, _EPROCESS.FullPath,
             _EPROCESS.SeAuditProcessCreationInfo.ImageFileName.Name as audit_name
             from pslist() where not (_EPROCESS.FullPath =~ 'Windows')
    """
    print query
    search(query)

    query = """
    let user_a_processes=select Process.pid from tokens() where Comment =~ 'User: a'
    select _EPROCESS, handle, access, details from handles(pids: user_a_processes) where details =~ 'pmem'
    """
    print query
    search(query)

  # This signature specifically targets a string from the heap _and_ a string
  # from a DLL import. This plugin will associate the two hits with the same
  # process and should produce two instances of svchost.exe.
  TestWinPhysicalYaraScanner: |
    yara_expression = """rule XX {
      strings:
        $a = {53 00 75 00 62 00 73 00 63 00 72 00 69 00 62 00 65 00 72 00 50 00 72 00 6f 00 70 00 65 00 72 00}
        $b = {77 00 70 00 61 00 64 00 2e 00 76 00 2e 00 63 00 6f 00 72 00 70 00 2e 00 67 00 6f 00 6f 00 67 00}
      condition: all of them
      }"""
    yarascan_physical(yara_expression=yara_expression, hits=2000)

  # The same signature applied to the virtual address space will not produce a
  # hit on this process even though it will produce it in the above test. This
  # is because the hits are not occuring in the same region and yara does not
  # retain the context from one buffer to the next.
  TestWinYaraScan: |
    yara_expression = """rule XX {
      strings:
        $a = {53 00 75 00 62 00 73 00 63 00 72 00 69 00 62 00 65 00 72 00 50 00 72 00 6f 00 70 00 65 00 72 00}
        $b = {77 00 70 00 61 00 64 00 2e 00 76 00 2e 00 63 00 6f 00 72 00 70 00 2e 00 67 00 6f 00 6f 00 67 00}
      condition: all of them
      }"""
    yarascan(yara_expression=yara_expression, hits=2000, scan_process_memory=1, pids=[624, 236])

TestYara:
  string: Microsoft
  proc_regex: csrss
